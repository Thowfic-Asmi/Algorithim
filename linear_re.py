# -*- coding: utf-8 -*-
"""Linear re

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1n39ruKbXuei4tOON8rGxhGHHrHbU4K-K
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

from google.colab import files


uploaded = files.upload()

df

df=pd.read_csv('mentalomen.csv')

df['mental_health_risk'] = df.apply(label_risk, axis=1)

le = LabelEncoder()
df['Stress Level'] = le.fit_transform(df['Stress Level'])

sns.countplot(x='mental_health_risk', data=df)
plt.title('Distribution of Mental Health Risk')
plt.xlabel('Mental Health Risk (0 = No, 1 = At Risk)')
plt.ylabel('Count')
plt.show()

sns.boxplot(x='mental_health_risk', y='Sleep Hours', data=df)
plt.title('Sleep Hours by Mental Health Risk')
plt.xlabel('Mental Health Risk')
plt.ylabel('Sleep Hours')
plt.show()

sns.boxplot(x='mental_health_risk', y='Screen Time per Day (Hours)', data=df)
plt.title('Screen Time by Mental Health Risk')
plt.xlabel('Mental Health Risk')
plt.ylabel('Screen Time (Hours)')
plt.show()

sns.swarmplot(x='mental_health_risk', y='Social Interaction Score', data=df)
plt.title('Social Interaction Score by Mental Health Risk')
plt.xlabel('Mental Health Risk')
plt.ylabel('Social Interaction Score')
plt.show()

sns.pairplot(df[features + ['mental_health_risk']], hue='mental_health_risk')
plt.suptitle('Pairplot of Features Colored by Risk',)
plt.show()

age = np.random.randint(18, 65, )
gender = np.random.choice(['Male', 'Female'], )
sleep_hours = np.round(np.random.normal(6.5, 1.2, ), 1)
sleep_hours = np.clip(sleep_hours, 3.5, 11.5)

duplicates = df[df.duplicated()]

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression

X = df[['Sleep Hours', 'Stress Level', 'Screen Time per Day (Hours)', 'Social Interaction Score']]
y = df['mental_health_risk']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LogisticRegression()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

from sklearn.metrics import accuracy_score, classification_report

# ... other code ...

y_pred = model.predict(X_test)

accuracy = accuracy_score(y_test, y_pred) # Assign the result of accuracy_score to the variable accuracy
print("Accuracy:", accuracy)
print("Classification Report:")
print(classification_report(y_test, y_pred))

new_individual = [[5, 1, 6, 3]]  # sleep hours, work stress, screen time, social interaction
risk = model.predict(new_individual)
print("Risk:", risk)

print(df.head())